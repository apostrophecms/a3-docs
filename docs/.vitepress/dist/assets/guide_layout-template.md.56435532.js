import{_ as e,o as a,c as s,$ as t}from"./chunks/framework.9fa1e75e.js";const m=JSON.parse('{"title":"Layout templates","description":"","frontmatter":{"prev":{"text":"Working with templates","link":"guide/templating.md"},"next":{"text":"Template data","link":"guide/template-data.md"}},"headers":[],"relativePath":"guide/layout-template.md","filePath":"guide/layout-template.md","lastUpdated":1690289066000}'),n={name:"guide/layout-template.md"},o=t(`<h1 id="layout-templates" tabindex="-1">Layout templates <a class="header-anchor" href="#layout-templates" aria-label="Permalink to &quot;Layout templates&quot;">â€‹</a></h1><p>A layout template is common in most Apostrophe apps. As the name suggests, it <strong>contains the markup that surrounds page content and is mostly consistent across the website</strong>. Website navigation and footers are both usually in the layout template, whether directly as markup or included from template partials.</p><p><strong>Let&#39;s look at a simple layout template file at <code>views/layout.html</code>.</strong></p><div class="language-njk"><button title="Copy Code" class="copy"></button><span class="lang">njk</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{# views/layout.html #}</span></span>
<span class="line"><span style="color:#A6ACCD;">{% extends data.outerLayout %}{# ðŸ‘ˆ Extending outerLayout.html from core #}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">{# ðŸ‘‡ Inserting markup into a lower level template block #}</span></span>
<span class="line"><span style="color:#A6ACCD;">{% block beforeMain %}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{# Open page wrapper #}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/images/logo.png</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">alt</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Organization logo</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">nav</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{# Website navigation #}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">nav</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    {% if not data.user %}</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/login</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Login</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{% endif %}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{# Open main tag #}</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endblock %}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">{% block afterMain %}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{# Close main tag #}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bp-footer</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      Â© Apostrophe Technology, Inc.</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{# Close page wrapper #}</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endblock %}</span></span></code></pre></div><p>You might notice is that this does not have essential web page elements such as a <code>head</code> or <code>body</code> tag. That is because the first thing this template does is extend another template:</p><div class="language-njk"><button title="Copy Code" class="copy"></button><span class="lang">njk</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% extends data.outerLayout %}</span></span></code></pre></div><p><code>data.outerLayout</code> is a reference to a lower level layout template from Apostrophe core that includes those critical HTML elements, markup required by Apostrophe, and the template block structure that project-level templates use. <strong>The lowest-level templates in any project should extend this.</strong> (<a href="https://github.com/apostrophecms/apostrophe/blob/main/modules/%40apostrophecms/template/views/outerLayoutBase.html" target="_blank" rel="noreferrer">See that file on Github</a> if you&#39;re interested.)</p><p>This layout template then includes two template blocks, <strong><code>beforeMain</code> and <code>afterMain</code></strong>, containing markup that wraps most page content.</p><div class="language-njk"><button title="Copy Code" class="copy"></button><span class="lang">njk</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{% block beforeMain %}</span></span>
<span class="line"><span style="color:#A6ACCD;">  {# Page opening markup... #}</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endblock %}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">{% block afterMain %}</span></span>
<span class="line"><span style="color:#A6ACCD;">  {# Page ending markup... #}</span></span>
<span class="line"><span style="color:#A6ACCD;">{% endblock %}</span></span></code></pre></div><p>These two are before and after the <code>main</code> block in the base layout template linked above. By using them in <code>views/layout.html</code>, they override the matching blocks in the extended template. They are great places to put the site navigation, site footer, and other markup that should always wrap the main content of the page.</p><p>The most important templates blocks from that core layout template are:</p><table><thead><tr><th>Template block name</th><th>What is it?</th></tr></thead><tbody><tr><td><code>startHead</code></td><td>A block at the beginning of the <code>head</code> tag for inserting metadata tags.</td></tr><tr><td><code>title</code></td><td>The contents of the <code>title</code> tag. This defaults to using the title of the page or piece (for <a href="/guide/piece-pages.html#the-show-page-template">show pages</a>).</td></tr><tr><td><code>extraHead</code></td><td>A block at the end of the <code>head</code> tag for inserting metadata tags.</td></tr><tr><td><code>bodyClass</code></td><td>A block in the <code>body</code> tag&#39;s <code>class</code> attribute for adding a class for when that template is used.</td></tr><tr><td><code>beforeMain</code></td><td>A block before the <code>main</code> content block. Usually used for the website header.</td></tr><tr><td><code>main</code></td><td>The primary block for page content. Most page template markup goes inside <code>main</code>.</td></tr><tr><td><code>afterMain</code></td><td>A block after the <code>main</code> content block. Usually used for the website footer.</td></tr><tr><td><code>extraBody</code></td><td>A block at the end of the <code>body</code> tag.</td></tr></tbody></table><p>The layout template and any page, index page, or show page template could use these blocks to overwrite them or add to them (<a href="/guide/templating.html#the-super-tag">using the <code>super()</code> tag</a>).</p><div class="info custom-block"><p class="custom-block-title">NOTES</p><p>The <code>beforeMain</code>, <code>main</code>, and <code>afterMain</code> blocks are inside the section that Apostrophe refreshes regularly during content editing. Any <code>script</code> tags inside those blocks will run an indeterminate number of times during editing. Be especially careful when using event handlers. As a reminder, any widget-related JavaScript belongs in a <a href="/guide/custom-widgets.html#client-side-javascript-for-widgets">widget player</a>.</p><p><code>layout.html</code> is a naming convention in Apostrophe, but is not a required file name. You can name it anything you like. Just remember to extend <code>data.outerLayout</code> and update page templates to extend it by its new name.</p></div>`,14),l=[o];function p(c,r,i,d,y,h){return a(),s("div",null,l)}const u=e(n,[["render",p]]);export{m as __pageData,u as default};
