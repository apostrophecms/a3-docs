import{_ as e,o as t,c as a,$ as s}from"./chunks/framework.9fa1e75e.js";const u=JSON.parse('{"title":"string","description":"","frontmatter":{},"headers":[],"relativePath":"reference/field-types/string.md","filePath":"reference/field-types/string.md","lastUpdated":1690289066000}'),o={name:"reference/field-types/string.md"},n=s(`<h1 id="string" tabindex="-1"><code>string</code> <a class="header-anchor" href="#string" aria-label="Permalink to &quot;\`string\`&quot;">​</a></h1><p>A <code>string</code> field is a editable text field with configurable options, including a textarea interface.</p><h2 id="module-field-definition" tabindex="-1">Module field definition <a class="header-anchor" href="#module-field-definition" aria-label="Permalink to &quot;Module field definition&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Configuring the \`dogName\`and \`biography\` fields in a module&#39;s</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// \`fields.add\` subsection:</span></span>
<span class="line"><span style="color:#FFCB6B;">dogName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">label</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">What is your dog</span><span style="color:#A6ACCD;">\\&#39;</span><span style="color:#C3E88D;">s name?</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Textarea</span></span>
<span class="line"><span style="color:#FFCB6B;">biography</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">label</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Write a short biography for your dog</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">string</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">textarea</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">max</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">800</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;Settings&quot;">​</a></h2><h3 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>label</code></td><td>String</td><td>n/a</td><td>Sets the visible label for the field in the UI</td></tr><tr><td><code>type</code></td><td>String</td><td>n/a</td><td>Specifies the field type (<code>string</code> for this type)</td></tr></tbody></table><h3 id="optional" tabindex="-1">Optional <a class="header-anchor" href="#optional" aria-label="Permalink to &quot;Optional&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>def</code></td><td>String</td><td>n/a</td><td>The default value for the field</td></tr><tr><td><a href="#following"><code>following</code></a></td><td>String/Array</td><td>n/a</td><td>The name of a field or an array of field names that will be used to automatically generate this field&#39;s value. If this field is edited to no longer match the fields it is following, it will stop responding to edits in those fields.</td></tr><tr><td><code>help</code></td><td>String</td><td>n/a</td><td>Help text for the content editor</td></tr><tr><td><code>htmlHelp</code></td><td>String</td><td>n/a</td><td>Help text with support for HTML markup</td></tr><tr><td><code>if</code></td><td>Object</td><td><code>{}</code></td><td>Conditions to meet before the field is active. <a href="/guide/conditional-fields.html">See the guide for details.</a></td></tr><tr><td><code>min</code></td><td>Integer</td><td>n/a</td><td>Sets the minimum number of characters allowed</td></tr><tr><td><code>max</code></td><td>Integer</td><td>n/a</td><td>Sets the maximum number of characters allowed</td></tr><tr><td><code>required</code></td><td>Boolean</td><td><code>false</code></td><td>If <code>true</code>, the field is mandatory</td></tr><tr><td><code>readOnly</code></td><td>Boolean</td><td><code>false</code></td><td>If <code>true</code>, prevents the user from editing the field value</td></tr><tr><td><code>sortify</code></td><td>Boolean</td><td><code>false</code></td><td>If true, creates &quot;sortified&quot; fields. See below.</td></tr><tr><td><code>textarea</code></td><td>Boolean</td><td><code>false</code></td><td>If <code>true</code>, use a textarea interface with multiple lines, which allows line breaks</td></tr></tbody></table><h3 id="following" tabindex="-1">following <a class="header-anchor" href="#following" aria-label="Permalink to &quot;following&quot;">​</a></h3><p>This option should be set to the name of a field or an array of field names that will be used to automatically generate this field&#39;s value. If this field is edited to no longer match the fields it is following, it will stop responding to edits in those fields.</p><p>If an array of fields is passed, the value of each will be concated in the order they are passed in the array.</p><p>If this field is nested in an <code>array</code> or <code>object</code> field and is following a field in the parent object, then the name of the field should be prefixed with a <code>&lt;</code>, e.g. <code>following: &#39;&lt;title&#39;</code>. This hoisting also works if the field is following a field in the parent object from a grand-child <code>array</code> or <code>object</code> that is nested within a child <code>array</code> or <code>object</code> using <code>&lt;&lt;</code>. This pattern can be extended for additional levels of nesting.</p><h2 id="sortify" tabindex="-1"><code>sortify</code> <a class="header-anchor" href="#sortify" aria-label="Permalink to &quot;\`sortify\`&quot;">​</a></h2><p>Setting <code>sortify: true</code> creates a parallel version of the field that is more intuitive for sorting purposes. This new, additional property&#39;s key will be the string field&#39;s name, appended with <code>Sortified</code>. Its value will be fully lowercase and have all punctuation removed. Apostrophe will automatically use it if a request is made to sort on the original field.</p><p>For instance, if your field&#39;s <code>name</code> is <code>lastName</code> and you set <code>sortify: true</code>, <code>lastNameSortified</code> will automatically be created and used when sorting on the <code>lastName</code> field. This provides case-insensitive sorting that also ignores punctuation differences.</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>If you add <code>sortify: true</code> to an existing field, existing objects will get the sortified version of the field:</p><ul><li>on the next deployment via the <code>apostrophe-migrations:migrate</code> command line task,</li><li>when the individual Apostrophe documents are saved, or</li><li>at the next startup when in development.</li></ul><p>Migrations like this only need to be run once because on future updates or inserts of a document the sortified property is automatically set.</p></div><h2 id="use-in-templates" tabindex="-1">Use in templates <a class="header-anchor" href="#use-in-templates" aria-label="Permalink to &quot;Use in templates&quot;">​</a></h2><p>The Nunjucks <a href="https://mozilla.github.io/nunjucks/templating.html#nl2br" target="_blank" rel="noreferrer">nl2br</a> tag can help print textarea strings with line breaks.</p><div class="language-njk"><button title="Copy Code" class="copy"></button><span class="lang">njk</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">{{ data.piece.dogName }}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  {{ data.piece.biography | striptags(true) | escape | nl2br }}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,20),l=[n];function i(d,r,p,c,h,f){return t(),a("div",null,l)}const F=e(o,[["render",i]]);export{u as __pageData,F as default};
