import{_ as e,o as t,c as a,$ as s}from"./chunks/framework.9fa1e75e.js";const g=JSON.parse('{"title":"slug","description":"","frontmatter":{},"headers":[],"relativePath":"reference/field-types/slug.md","filePath":"reference/field-types/slug.md","lastUpdated":1690289066000}'),l={name:"reference/field-types/slug.md"},o=s(`<h1 id="slug" tabindex="-1"><code>slug</code> <a class="header-anchor" href="#slug" aria-label="Permalink to &quot;\`slug\`&quot;">​</a></h1><p><code>slug</code> adds a text field to the schema that is restricted to producing strings strings acceptable as Apostrophe document slugs. All <a href="/reference/glossary.html#doc">docs</a> already have a slug with with the name &quot;slug,&quot; as required by Apostrophe. It is therefore rare that developers have need to create additional fields of this type, but it is allowed.</p><p>Text entered in a <code>slug</code> field is immediately lower-cased and all spaces and punctuation are replaced by dashes (<code>-</code>).</p><h2 id="module-field-definition" tabindex="-1">Module field definition <a class="header-anchor" href="#module-field-definition" aria-label="Permalink to &quot;Module field definition&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Configuring the \`secondSlug\` field in a module&#39;s \`fields.add\` subsection:</span></span>
<span class="line"><span style="color:#FFCB6B;">projectSlug</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">label</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Enter a unique identifier for the project</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">slug</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;Settings&quot;">​</a></h2><h3 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>label</code></td><td>String</td><td>n/a</td><td>Sets the visible label for the field in the UI</td></tr><tr><td><code>type</code></td><td>String</td><td>n/a</td><td>Specifies the field type (<code>string</code> for this type)</td></tr></tbody></table><h3 id="optional" tabindex="-1">Optional <a class="header-anchor" href="#optional" aria-label="Permalink to &quot;Optional&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>def</code></td><td>String</td><td>n/a</td><td>The default value for the field</td></tr><tr><td><code>following</code></td><td>String/Array</td><td>n/a</td><td>The name of a field or an array of field names that will be used to automatically generate this field&#39;s value. If this field is edited to no longer match the fields it is following, it will stop responding to edits in those fields.</td></tr><tr><td><code>help</code></td><td>String</td><td>n/a</td><td>Help text for the content editor</td></tr><tr><td><code>htmlHelp</code></td><td>String</td><td>n/a</td><td>Help text with support for HTML markup</td></tr><tr><td><code>if</code></td><td>Object</td><td><code>{}</code></td><td>Conditions to meet before the field is active. <a href="/guide/conditional-fields.html">See the guide for details.</a></td></tr><tr><td><code>page</code></td><td>Boolean</td><td><code>false</code></td><td>If <code>true</code>, then slashes are allowed since the slug field is describing a page doc</td></tr><tr><td><code>required</code></td><td>Boolean</td><td><code>false</code></td><td>If <code>true</code>, the field is mandatory</td></tr><tr><td><code>readOnly</code></td><td>Boolean</td><td><code>false</code></td><td>If <code>true</code>, prevents the user from editing the field value</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you are overriding a piece type or page type&#39;s <code>slug</code> field and that doc type uses a <a href="/reference/module-api/module-options.html#slugprefix">slug prefix</a>, the <code>slug</code> field should include <code>&#39;archived&#39;</code> in the <code>following</code> option. It is used by the slug field type to manage prefixes, though its value is not included in the slug name.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">slug: {</span></span>
<span class="line"><span style="color:#A6ACCD;">  type: &#39;slug&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  label: &#39;Slug&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">  following: [ &#39;title&#39;, &#39;archived&#39; ],</span></span>
<span class="line"><span style="color:#A6ACCD;">  required: true</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>Overriding the <code>slug</code> field is typically only necessary if you want to change the <code>following</code> string fields.</p></div><h2 id="use-in-templates" tabindex="-1">Use in templates <a class="header-anchor" href="#use-in-templates" aria-label="Permalink to &quot;Use in templates&quot;">​</a></h2><p>If adding a new field with the <code>slug</code> type, it is most likely not going to be used in templates, but it is allowed as a string value.</p><div class="language-njk"><button title="Copy Code" class="copy"></button><span class="lang">njk</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{{ data.piece.projectSlug }}</span></span></code></pre></div>`,14),d=[o];function n(i,r,c,p,h,u){return t(),a("div",null,d)}const y=e(l,[["render",n]]);export{g as __pageData,y as default};
