import{_ as e,o as t,c as r,$ as d}from"./chunks/framework.9fa1e75e.js";const y=JSON.parse('{"title":"Schema Field Type Reference","description":"","frontmatter":{"prev":{"text":"Core modules | @apostrophecms/widget-type","link":"reference/modules/widget-type.html"},"next":{"text":"area","link":"reference/field-types/area.html"}},"headers":[],"relativePath":"reference/field-types/index.md","filePath":"reference/field-types/index.md","lastUpdated":1690289066000}'),a={name:"reference/field-types/index.md"},o=d('<h1 id="schema-field-type-reference" tabindex="-1">Schema Field Type Reference <a class="header-anchor" href="#schema-field-type-reference" aria-label="Permalink to &quot;Schema Field Type Reference&quot;">â€‹</a></h1><p>See below for a list of all of the field types available in Apostrophe along with a brief description of their input. Click through to each for a complete description of its function, properties, and reference code to help you use them in your project.</p><table><thead><tr><th>Field</th><th>Input Description</th></tr></thead><tbody><tr><td><a href="/reference/field-types/area.html">area</a></td><td>One or more content widgets (<a href="/reference/glossary.html#area">glossary entry</a>)</td></tr><tr><td><a href="/reference/field-types/array.html">array</a></td><td>An array of structured content using its own <a href="/reference/glossary.html#schema">field schema</a></td></tr><tr><td><a href="/reference/field-types/attachment.html">attachment</a></td><td>File upload</td></tr><tr><td><a href="/reference/field-types/boolean.html">boolean</a></td><td><code>true</code> or <code>false</code></td></tr><tr><td><a href="/reference/field-types/checkboxes.html">checkboxes</a></td><td>Multi-select checkbox options</td></tr><tr><td><a href="/reference/field-types/color.html">color</a></td><td>Color selection</td></tr><tr><td><a href="/reference/field-types/date.html">date</a></td><td>Date entry, stored in YYYY-MM-DD format</td></tr><tr><td><a href="/reference/field-types/email.html">email</a></td><td>Email address</td></tr><tr><td><a href="/reference/field-types/float.html">float</a></td><td>A floating point number</td></tr><tr><td><a href="/reference/field-types/integer.html">integer</a></td><td>A whole number, whether positive or negative</td></tr><tr><td><a href="/reference/field-types/object.html">object</a></td><td>A sub-object of structured content using its own <a href="/reference/glossary.html#schema">field schema</a></td></tr><tr><td><a href="/reference/field-types/oembed.html">oembed</a></td><td>Media URL to be embedded via <a href="https://oembed.com/" target="_blank" rel="noreferrer">the oEmbed format</a></td></tr><tr><td><a href="/reference/field-types/password.html">password</a></td><td>Text entry that obscures input</td></tr><tr><td><a href="/reference/field-types/radio.html">radio</a></td><td>Single value selection with a radio input interface</td></tr><tr><td><a href="/reference/field-types/range.html">range</a></td><td>A floating point number with a sliding interface</td></tr><tr><td><a href="/reference/field-types/relationship.html">relationship</a></td><td>One or more related content docs (pieces or pages)</td></tr><tr><td><a href="/reference/field-types/relationship-reverse.html">relationshipReverse</a></td><td>Reveals the &quot;other side&quot; of a <code>relationship</code></td></tr><tr><td><a href="/reference/field-types/select.html">select</a></td><td>Single value selection with a dropdown interface</td></tr><tr><td><a href="/reference/field-types/slug.html">slug</a></td><td>Text string value that is converted on save to lowercase and hyphenated</td></tr><tr><td><a href="/reference/field-types/string.html">string</a></td><td>Simple text string</td></tr><tr><td><a href="/reference/field-types/time.html">time</a></td><td>Time entry, stored in HH:MM:SS format</td></tr><tr><td><a href="/reference/field-types/url.html">url</a></td><td>Text input requiring URL structure</td></tr><tr><td><a href="/reference/field-types/dateAndTime.html">dateAndTime</a></td><td>A toggle button and two inputs for date and time, stored in ISO 8601 format <code>YYYY-MM-DDTHH:MM:SSZ</code></td></tr></tbody></table>',3),i=[o];function n(l,s,f,c,h,p){return t(),r("div",null,i)}const u=e(a,[["render",n]]);export{y as __pageData,u as default};
