import{_ as t,o as e,c as a,$ as d}from"./chunks/framework.9fa1e75e.js";const y=JSON.parse('{"title":"password","description":"","frontmatter":{},"headers":[],"relativePath":"reference/field-types/password.md","filePath":"reference/field-types/password.md","lastUpdated":1690289066000}'),s={name:"reference/field-types/password.md"},o=d('<h1 id="password" tabindex="-1"><code>password</code> <a class="header-anchor" href="#password" aria-label="Permalink to &quot;`password`&quot;">​</a></h1><p><code>password</code> fields are identical to <code>string</code> fields except that the user&#39;s input is visually obscured, they do not support the <code>textarea</code> option, and they are not indexed for search.</p><h2 id="module-field-definition" tabindex="-1">Module field definition <a class="header-anchor" href="#module-field-definition" aria-label="Permalink to &quot;Module field definition&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Configuring the `secret` field in a module&#39;s `fields.add` subsection:</span></span>\n<span class="line"><span style="color:#FFCB6B;">secret</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">label</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Your secret code</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">password</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-label="Permalink to &quot;Settings&quot;">​</a></h2><h3 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-label="Permalink to &quot;Required&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>label</code></td><td>String</td><td>n/a</td><td>Sets the visible label for the field in the UI</td></tr><tr><td><code>type</code></td><td>String</td><td>n/a</td><td>Specifies the field type (<code>password</code> for this type)</td></tr></tbody></table><h3 id="optional" tabindex="-1">Optional <a class="header-anchor" href="#optional" aria-label="Permalink to &quot;Optional&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>def</code></td><td>String</td><td>n/a</td><td>The default value for the field</td></tr><tr><td><code>help</code></td><td>String</td><td>n/a</td><td>Help text for the content editor</td></tr><tr><td><code>htmlHelp</code></td><td>String</td><td>n/a</td><td>Help text with support for HTML markup</td></tr><tr><td><code>min</code></td><td>Integer</td><td>n/a</td><td>Sets the minimum number of characters allowed</td></tr><tr><td><code>max</code></td><td>Integer</td><td>n/a</td><td>Sets the maximum number of characters allowed</td></tr><tr><td><code>required</code></td><td>Boolean</td><td>false</td><td>If <code>true</code>, the field is mandatory</td></tr><tr><td><code>readOnly</code></td><td>Boolean</td><td><code>false</code></td><td>If <code>true</code>, prevents the user from editing the field value</td></tr></tbody></table><h2 id="use-in-templates" tabindex="-1">Use in templates <a class="header-anchor" href="#use-in-templates" aria-label="Permalink to &quot;Use in templates&quot;">​</a></h2><p>You probably do not want to print values from this field in templates, but they can be printed the same way as <a href="./string.html">string fields</a>.</p>',11),r=[o];function n(l,i,p,c,h,f){return e(),a("div",null,r)}const m=t(s,[["render",n]]);export{y as __pageData,m as default};
