import{_ as a,K as s,o as d,c as n,O as c,k as e,a as r,$ as i}from"./chunks/framework.9fa1e75e.js";const k=JSON.parse('{"title":"@apostrophecms/db","description":"","frontmatter":{"extends":"@apostrophecms/module"},"headers":[],"relativePath":"reference/modules/db.md","filePath":"reference/modules/db.md","lastUpdated":1690289066000}'),l={name:"reference/modules/db.md"},h=e("h1",{id:"apostrophecms-db",tabindex:"-1"},[e("code",null,"@apostrophecms/db"),r(),e("a",{class:"header-anchor",href:"#apostrophecms-db","aria-label":'Permalink to "`@apostrophecms/db`"'},"​")],-1),p=i('<p>This module establishes <code>apos.db</code>, the MongoDB driver database object.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>apos.db</code> is the MongoDB database object, not an alias to this module. You shouldn&#39;t need to talk to this module after startup, but you can access it as <code>apos.modules[&#39;@apostrophecms/db&#39;]</code> if needed. You can also access <code>apos.dbClient</code> if you need the MongoClient object.</p></div><h2 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;Options&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>uri</code></td><td>String</td><td>The MongoDB connection URI. See the <a href="https://docs.mongodb.com/manual/reference/connection-string/" target="_blank" rel="noreferrer">MongoDB URI documentation</a>.</td></tr><tr><td><code>connect</code></td><td>Object</td><td>If present, this object is passed on as options to MongoDB&#39;s &quot;connect&quot; method, along with the uri. See the <a href="http://mongodb.github.io/node-mongodb-native/2.2/reference/connecting/connection-settings/" target="_blank" rel="noreferrer">MongoDB connect settings documentation</a>.</td></tr><tr><td><code>user</code></td><td>String</td><td>Used to construct a database URI (with the <code>password</code> option) if the <code>uri</code> option is not used.</td></tr><tr><td><code>password</code></td><td>String</td><td>Used to construct a database URI (with the <code>user</code> option) if the <code>uri</code> option is not used.</td></tr><tr><td><code>host</code></td><td>String</td><td>A hostname to use in the database URI if the <code>uri</code> option is not used. This falls back to <code>localhost</code>.</td></tr><tr><td><code>port</code></td><td>Integer</td><td>A port to use in the database URI if the <code>uri</code> option is not used. This falls back to <code>27017</code>.</td></tr><tr><td><code>name</code></td><td>String</td><td>The project&#39;s database name. This falls back to the project <a href="/reference/glossary.html#shortname">shortname</a>.</td></tr><tr><td><code>client</code></td><td>String</td><td>An existing MongoDB connection (MongoClient) object. If present, it is used and <code>uri</code>, <code>host</code>, <code>connect</code>, etc. are ignored.</td></tr><tr><td><code>versionCheck</code></td><td>Boolean</td><td>If <code>true</code>, Apostrophe checks the database and exits if it belongs to an older, incompatible major version of Apostrophe. Defaults to <code>true</code>. Set to <code>false</code> to avoid an extra query at startup.</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">INFO</p><p>In addition to the <code>uri</code> option and the <code>host</code>, <code>port</code>, and other options that build a MongoDB connection URI, we can pass a connection URI using the <code>APOS_MONGODB_URI</code> environment variable.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">APOS_MONGODB_URI</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">mongodb://db_user:D1fficultP%40ssw0rd@mongodb0.example.com:27017/?authSource=apos-site-db</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">app</span></span></code></pre></div></div><h2 id="featured-methods" tabindex="-1">Featured methods <a class="header-anchor" href="#featured-methods" aria-label="Permalink to &quot;Featured methods&quot;">​</a></h2><p>The following methods belong to this module and may be useful in project-level code. See the <a href="https://github.com/apostrophecms/apostrophe/blob/main/modules/%40apostrophecms/db/index.js" target="_blank" rel="noreferrer">source code</a> for all methods that belong to this module.</p><p>Because this module has an alias, you can call these from another module from the alias path. For example, <code>self.apos.db.connectToMongo()</code>.</p><h3 id="connecttomongo" tabindex="-1"><code>connectToMongo()</code> <a class="header-anchor" href="#connecttomongo" aria-label="Permalink to &quot;`connectToMongo()`&quot;">​</a></h3><p>Open the database connection. Always uses <code>mongo.MongoClient</code> with its sensible defaults. Build a URI if necessary, so we can call it in a consistent way. One default we override: if the connection is lost, we keep attempting to reconnect forever. This is sensible behavior for a persistent process that requires MongoDB in order to operate.</p><p>If you need to change the way MongoDB connections are made, override <code>connectToMongo</code> in your project. In many cases it is easier to just use the <code>client</code> option.</p><h2 id="module-tasks" tabindex="-1">Module tasks <a class="header-anchor" href="#module-tasks" aria-label="Permalink to &quot;Module tasks&quot;">​</a></h2><h3 id="reset" tabindex="-1"><code>reset</code> <a class="header-anchor" href="#reset" aria-label="Permalink to &quot;`reset`&quot;">​</a></h3><p>Full command: <code>node app @apostrophecms/db:reset</code></p><p>This task command fully resets the database. It drops <em>all</em> collections (other than system collections) and <strong>destroys <em>all</em> project content</strong>. Useful in local development. Very terrible in production.</p>',15);function u(o,m,b,f,g,_){const t=s("AposRefExtends");return d(),n("div",null,[h,c(t,{module:o.$frontmatter.extends},null,8,["module"]),p])}const D=a(l,[["render",u]]);export{k as __pageData,D as default};
