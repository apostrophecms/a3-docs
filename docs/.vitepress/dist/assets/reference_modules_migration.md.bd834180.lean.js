import{_ as d,K as o,o as l,c as h,O as a,w as i,k as e,a as t,$ as s}from"./chunks/framework.9fa1e75e.js";const x=JSON.parse('{"title":"@apostrophecms/migration","description":"","frontmatter":{"extends":"@apostrophecms/module"},"headers":[],"relativePath":"reference/modules/migration.md","filePath":"reference/modules/migration.md","lastUpdated":1690289066000}'),m={name:"reference/modules/migration.md"},u=e("h1",{id:"apostrophecms-migration",tabindex:"-1"},[e("code",null,"@apostrophecms/migration"),t(),e("a",{class:"header-anchor",href:"#apostrophecms-migration","aria-label":'Permalink to "`@apostrophecms/migration`"'},"â€‹")],-1),p=e("p",null,[e("strong",null,"Alias:"),t(),e("code",null,"apos.migration")],-1),f=s("",8),g=s("",24);function b(n,y,w,v,_,k){const r=o("AposRefExtends"),c=o("AposCodeBlock");return l(),h("div",null,[u,p,a(r,{module:n.$frontmatter.extends},null,8,["module"]),f,a(c,null,{caption:i(()=>[t(" modules/rose/index.js ")]),default:i(()=>[t(" ```javascript module.exports = { extend: '@apostrophecms/piece-type' init(self) { // ðŸ‘‡ Adding a data migration related to this module. self.apos.migration.add('fix-roses', self.paintRosesRed); }, methods(self) { return { // ðŸ‘‡ Registering a method to run in the migration. async paintRosesRed () { await self.apos.migration.eachDoc({ type: 'rose', color: 'white' }, async (doc) => { await self.apos.doc.db.updateOne({ _id: doc._id }, { $set: { color: 'red' } }); }); } } } }; ``` ")]),_:1}),g])}const I=d(m,[["render",b]]);export{x as __pageData,I as default};
